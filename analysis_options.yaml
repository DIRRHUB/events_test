include: package:flutter_lints/flutter.yaml

analyzer:

  language:
    strict-casts: true

  exclude:
    - "**.g.dart"
    - "**/*.g.dart"
    - "**.mocks.dart"
    - "**/*.freezed.dart"
    - "example/**"
    - "build/**"
  errors:
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file
    included_file_warning: ignore
    #ignore global deprecation, maybe should be enabled
    deprecated_member_use: ignore #should be info after Material design update
    #ignore current pachage deprecation to use Deprecated word inside project
    #more: https://github.com/dart-lang/sdk/commit/c54bc11770fd35ee739c7abac247029a99536553#diff-a49e6440bfa40e02e02caa55132ae51abdc48b5dd56fcb419e7088c8340414d2R16
    deprecated_member_use_from_same_package: ignore
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # treat missing returns as a warning (not a hint)
    missing_return: warning
    # allow having TODOs in the code
    todo: true
    #Allow assets with dot at start
    asset_directory_does_not_exist: info
    unused_import: error
    #NOTE: should be info due to the problem: https://github.com/dart-lang/dart_style/issues/753
    require_trailing_commas: info
    use_build_context_synchronously: info

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    await_only_futures: true
    always_declare_return_types: true
    always_use_package_imports: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_empty_else: true
    avoid_print: true
    avoid_relative_lib_imports: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    dangling_library_doc_comments: true
    depend_on_referenced_packages: true
    eol_at_end_of_file: true
    hash_and_equals: true
    implementation_imports: true
    leading_newlines_in_multiline_strings: true
    library_annotations: true
    library_names: true
    library_prefixes: true
    library_private_types_in_public_api: true
    lines_longer_than_80_chars: false
    literal_only_boolean_expressions: true
    no_runtimeType_toString: true
    null_closures: true
    null_check_on_nullable_type_parameter: true
    prefer_contains: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_if_null_operators: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_single_quotes: true
    prefer_int_literals: true
    parameter_assignments: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_interpolation_to_compose_strings: true
    prefer_asserts_in_initializer_lists: true
    prefer_constructors_over_static_methods: true
    require_trailing_commas: true
    sized_box_for_whitespace: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: false
    use_super_parameters: true
    unawaited_futures: false
    unnecessary_await_in_return: true
    unnecessary_breaks: false
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_library_directive: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unnecessary_to_list_in_spreads: true
    unsafe_html: true
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: true
    use_string_buffers: true
    use_build_context_synchronously: true
    constant_identifier_names: true
    deprecated_consistency: true